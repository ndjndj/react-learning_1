[{"C:\\shinzawa\\react\\react-learning_1\\tutorial\\src\\index.js":"1"},{"size":3094,"mtime":1609919045369,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"c9v9m9","C:\\shinzawa\\react\\react-learning_1\\tutorial\\src\\index.js",["7"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) { \r\n  return (\r\n    <button \r\n      className=\"square\" \r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return <Square \r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history: [{squares: Array(9).fill(null),}],\r\n      xIsNext: true,\r\n    }\r\n  }\r\n  \r\n  handleClick(i) {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{squares: squares}]),\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map(\r\n      (step, move) => {\r\n        const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n        return (\r\n          <lI key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      }\r\n    );\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    \r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-info\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// =======================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[i] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  return null;\r\n}",{"ruleId":null,"fatal":true,"severity":2,"message":"8","line":82,"column":11},"Parsing error: Expected corresponding JSX closing tag for <lI>\n\n\u001b[0m \u001b[90m 80 | \u001b[39m          \u001b[33m<\u001b[39m\u001b[33mlI\u001b[39m key\u001b[33m=\u001b[39m{move}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 81 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mbutton\u001b[39m onClick\u001b[33m=\u001b[39m{() \u001b[33m=>\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mjumpTo(move)}\u001b[33m>\u001b[39m{desc}\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mbutton\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 82 | \u001b[39m          \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mli\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 83 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 84 | \u001b[39m      }\u001b[0m\n\u001b[0m \u001b[90m 85 | \u001b[39m    )\u001b[33m;\u001b[39m\u001b[0m"]